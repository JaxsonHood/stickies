{"version":3,"sources":["components/Sticky.js","components/ColourPicker.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Sticky","props","toggleWide","setState","wide","state","toggleOpen","open","buildTodos","todos","rendered_todos","i","todo","leftCol","onClick","markTodoToggle","className","complete","size","icon","faCheck","deleteTodo","faBackspace","todoTextColour","textColour","push","toggleColourPicker","faPalette","id","value","title","onChange","handleChangeTodo","this","input","sticky","handleChangeTitle","openToggle","faArrowDown","faArrowUp","delete","faTrashAlt","faObjectGroup","addTodo","faPlus","class","React","Component","ColourPicker","setChosen","c","chosen","save","textClass","split","isOpen","faTimes","App","componentDidMount","sticks","window","localStorage","getItem","console","log","stickies","JSON","parse","saveChanges","newList","setItem","stringify","e","stick","target","id_stickies","id_todos","j","buildStickies","deleteSticky","addSticky","allStickies","newTodos","t","colourPickerOpen","pickerState","saveColourChange","colour","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.014e744e.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowDown, faArrowUp, faBackspace, faCheck, faObjectGroup, faPalette, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass Sticky extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n        wide: false,\n        open: false\n    }\n  }\n\n  toggleWide = () => {\n      this.setState({wide : !this.state.wide})\n  }\n\n  toggleOpen = () => {\n    this.setState({open : !this.state.open})\n  }\n\n  buildTodos = (todos) => {\n    let rendered_todos = []\n    \n    for (let i in todos){\n      let todo = todos[i]\n\n      let leftCol = <button onClick={()=>this.props.markTodoToggle(this.props.i, i)} className={`shadow mt-1 border-4 w-8 h-6 rounded-full border-blue-500 hover:border-blue-700`}></button>\n      if (todo.complete) leftCol = <div className=\"flex gap-4\">\n          <FontAwesomeIcon onClick={()=>this.props.markTodoToggle(this.props.i, i)}  className=\"text-green-400 mt-2 hover:text-green-600 cursor-pointer\" size=\"lg\" icon={faCheck} />\n          <FontAwesomeIcon onClick={()=>this.props.deleteTodo(this.props.i, i)}  className=\"text-gray-500 mt-2 hover:text-gray-800 cursor-pointer\" size=\"lg\" icon={faBackspace} />\n      </div>\n\n      let todoTextColour = todo.textColour\n      if (todoTextColour == null) todoTextColour = \"text-gray-900\"\n\n      rendered_todos.push(\n        <div className=\"mb-1 mt-1 flex justify-start\">\n          <div className=\"col\">\n            {leftCol}\n            <div className={`pl-1 ${todo.complete ? \"hidden\" : \"\"}`}>\n              <FontAwesomeIcon onClick={()=>this.props.toggleColourPicker(this.props.i, i)}  className=\"text-gray-900 mt-2 hover:text-green-900 cursor-pointer\" size=\"lg\" icon={faPalette} />\n            </div>\n          </div>\n          <div className={`ml-2 w-full ${todo.complete ? \"\" : \"hover:bg-gray-100\"}`}>\n            <textarea id={`${this.props.i}-${i}`} className={`focus:ring-2 focus:ring-blue-200 bg-transparent focus:bg-gray-50 flex flex-wrap px-2 py-1 w-full h-14 font-semibold text-md ${todo.complete ? \"line-through text-gray-400\" : todoTextColour}`} value={todo.title} onChange={this.props.handleChangeTodo}></textarea>\n          </div>\n      </div>\n      )\n    }\n    return rendered_todos\n  }\n\n  render(){\n    let i = this.props.i\n    let input =  <textarea id={i} className={`flex flex-wrap pl-1 text-3xl font-bold h-18 ${this.state.wide ?  \"\" : \"w-64\"}`} value={this.props.sticky.title} onChange={this.props.handleChangeTitle}></textarea>\n\n    let openToggle = <div className='p-1'>\n      <button onClick={()=>{this.toggleOpen()}} className='p-1 text-gray-400 hover:text-gray-900 border-b-2'>\n        <FontAwesomeIcon className=\"text-2xl\" icon={faArrowDown} />\n      </button>\n    </div>\n\n    if (this.state.open){\n      openToggle = <div className='p-1'>\n      <button onClick={()=>{this.toggleOpen()}} className='p-1 text-gray-400 hover:text-gray-900 border-t-2'>\n        <FontAwesomeIcon className=\"text-2xl\" icon={faArrowUp} />\n      </button>\n    </div>\n    }\n\n    return (\n        <div className={`p-2 border-4 rounded-lg border-gray-100 hover:border-gray-200 ${this.state.wide ?  \"\" : \"w-80\"}`}>\n        <div className=\"p-2\">\n          <div className=\"flex justify-between\">\n            <div className=\"pl-1 font-semibold text-gray-400\">Sticky #{i}</div>\n            <div className=\"flex gap-4\">\n              <button onClick={()=>{this.props.delete(i)}} className='p-1'><FontAwesomeIcon className=\"text-red-500 hover:shadow hover:text-red-700\" size=\"lg\" icon={faTrashAlt} /></button>\n              <button onClick={()=>{this.toggleWide()}} className='p-1'><FontAwesomeIcon className={`hover:shadow hover:text-indigo-800 ${this.state.wide ? \"text-indigo-200\" : \"text-indigo-600\"}`} size=\"lg\" icon={faObjectGroup} /></button>\n            </div>\n          </div>\n          <div className=\"flex gap-2 justify-between\">\n            {input}\n            {openToggle}\n          </div>\n          <div className={`p-2 mt-2 ${this.state.open ? \"\" : \"hidden\"}`}>\n            {this.buildTodos(this.props.sticky.todos)}\n            <div className=\"flex justify-center p-1 pt-4\">\n              <button onClick={()=>this.props.addTodo(i)} className=\"flex border-4 rounded-lg px-2 py-1 border-gray-700 hover:border-gray-900 font-semibold text-lg\">Add Todo <FontAwesomeIcon className=\"pl-2\" icon={faPlus} /></button>\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"p-3 hidden\">\n                <button className={`w-8 h-8 rounded-lg border-2 text-green-500`}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 text-red-500`}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 text-blue-500`}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 text-yellow-500`}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 text-pink-500`}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 text-gray-900`}></button>\n          </div>\n    </div>\n    );\n  }\n};\n\nexport default Sticky;","import { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nclass ColourPicker extends React.Component {\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            chosen: \"bg-gray-900\",\n        }\n    }\n\n    setChosen = (c) => {\n        this.setState({chosen: c})\n    }\n\n    save = () => {\n        let builtLastPart = this.state.chosen.split('-')[1] + '-' + this.state.chosen.split('-')[2]\n        let textClass = 'text-' + builtLastPart\n        this.props.save(textClass)\n        this.props.toggleOpen(null, null)\n    }\n\n    render (){\n        return(\n            <div class={`modal h-screen w-full fixed left-0 top-0 flex justify-center items-center bg-black bg-opacity-50 ${this.props.isOpen ? \"\" : \"hidden\"}`}>\n          \n            <div class=\"bg-white rounded shadow-lg w-10/12 md:w-1/3\">\n          \n              <div class=\"border-b px-4 py-2 flex justify-between items-center\">\n                <h3 class=\"font-semibold text-lg\">Pick a Colour</h3>\n                <button class=\"text-black close-modal\" onClick={()=>this.props.toggleOpen(null, null)}><FontAwesomeIcon icon={faTimes} /></button>\n              </div>\n\n              <div class=\"flex flex-wrap gap-2 p-3\">\n                <button className={`w-8 h-8 rounded-lg border-2 bg-green-500 ${(this.state.chosen == \"bg-green-500\") ? \"border-4 border-black\" : \"\"}`}\n                    onClick={()=>this.setChosen(\"bg-green-500\")}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 bg-red-500 ${(this.state.chosen == \"bg-red-500\") ? \"border-4 border-black\" : \"\"}`}\n                    onClick={()=>this.setChosen(\"bg-red-500\")}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 bg-blue-500 ${(this.state.chosen == \"bg-blue-500\") ? \"border-4 border-black\" : \"\"}`}\n                    onClick={()=>this.setChosen(\"bg-blue-500\")}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 bg-yellow-500 ${(this.state.chosen == \"bg-yellow-500\") ? \"border-4 border-black\" : \"\"}`}\n                    onClick={()=>this.setChosen(\"bg-yellow-500\")}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 bg-pink-500 ${(this.state.chosen == \"bg-pink-500\") ? \"border-4 border-black\" : \"\"}`}\n                    onClick={()=>this.setChosen(\"bg-pink-500\")}></button>\n                <button className={`w-8 h-8 rounded-lg border-2 bg-gray-900 ${(this.state.chosen == \"bg-gray-900\") ? \"border-4 border-black\" : \"\"}`}\n                    onClick={()=>this.setChosen(\"bg-gray-900\")}></button>\n              </div>\n              <div class=\"flex justify-end items-center w-100 border-t p-3\">\n                <button class=\"px-3 py-1 rounded mr-1 close-modal\" onClick={()=>this.props.toggleOpen(null, null)}>Cancel</button>\n                <button class=\"bg-green-400 hover:bg-green-700 px-3 py-1 rounded text-white\" onClick={()=>this.save()}>Save</button>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default ColourPicker","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faObjectGroup, faPlus, faTrash, faTrashAlt, faWind } from '@fortawesome/free-solid-svg-icons'\nimport Sticky from './components/Sticky';\nimport ColourPicker from './components/ColourPicker';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      stickies:[],\n      colourPickerOpen: false,\n      pickerState: [0, 0],\n    }\n  }\n\n  componentDidMount = () => {\n    let sticks = window.localStorage.getItem('stickies');\n    console.log(sticks);\n    if (sticks !== null){\n      this.setState({stickies: JSON.parse(sticks)})\n    }\n  }\n\n  saveChanges = (newList) => {\n    window.localStorage.setItem('stickies', JSON.stringify(newList));\n    this.setState({ stickies: newList });\n  }\n\n  handleChangeTitle = (e) => {\n    let newList = []\n\n    for (let i in this.state.stickies){\n      let stick = this.state.stickies[i]\n\n      if (e.target.id == i){\n        stick.title = e.target.value\n      }\n\n      newList.push(stick);\n    }\n\n    this.saveChanges(newList)\n  };\n\n  handleChangeTodo = (e) => {\n    let newList = []\n\n    let id_stickies = e.target.id.split('-')[0]\n    let id_todos = e.target.id.split('-')[1]\n\n    for (let i in this.state.stickies){\n      let stick = this.state.stickies[i]\n      if (id_stickies == i){\n        stick.todos[id_todos].title = e.target.value\n      }\n\n      newList.push(stick);\n    }\n\n    this.saveChanges(newList)\n  };\n\n  markTodoToggle = (i, j) => {\n    let newList = []\n\n    let id_stickies = i\n    let id_todos = j\n\n    for (let i in this.state.stickies){\n      let stick = this.state.stickies[i]\n      if (id_stickies == i){\n        stick.todos[id_todos].complete = !stick.todos[id_todos].complete\n      }\n\n      newList.push(stick);\n    }\n\n    this.saveChanges(newList)\n  };\n\n  buildStickies = () => {\n    let stickies = []\n    for (let i in this.state.stickies){\n      let sticky = this.state.stickies[i]\n      stickies.push(<Sticky i={i} \n        sticky={sticky} \n        handleChangeTitle={this.handleChangeTitle} \n        handleChangeTodo={this.handleChangeTodo} \n        markTodoToggle={this.markTodoToggle}\n        addTodo={this.addTodo}\n        deleteTodo={this.deleteTodo}\n        toggleColourPicker={this.toggleColourPicker}\n        delete={this.deleteSticky} />)\n    }\n\n    //Add addsticky button\n    stickies.push(\n      <div className={`flex justify-center items-center p-2 border-gray-200 w-80 h-80`}>\n        <button className=\"hover:border-yellow-600 justify-center items-center mx-auto border-4 border-yellow-500 rounded-xl w-44 h-28\"\n        onClick={()=>{this.addSticky()}}>\n          <div className=\"mx-auto text-xl text-gray-900 font-semibold \">Add Sticky</div>\n          <FontAwesomeIcon className=\"text-yellow-500\" size=\"lg\" icon={faPlus} />\n        </button>\n      </div>\n    )\n\n    return stickies;\n  }\n\n  addSticky = () => {\n    let allStickies = this.state.stickies\n\n    allStickies.push(\n      {\n        title: \"Your title goes here\",\n        todos: []\n      }\n    )\n\n    this.saveChanges(allStickies)\n  }\n\n  deleteSticky = (i) => {\n    let allStickies = []\n\n    for (let j in this.state.stickies){\n      if (j != i){\n        allStickies.push(this.state.stickies[j])\n      }\n    }\n\n    this.saveChanges(allStickies)\n  }\n\n\n  addTodo = (i) => {\n    let newList = []\n\n    let id_stickies = i\n\n    for (let i in this.state.stickies){\n      let stick = this.state.stickies[i]\n      if (id_stickies == i){\n        stick.todos.push({\n          title: \"Your new Todo\",\n          complete: false,\n          textColour: \"text-gray-900\"\n        })\n      }\n\n      newList.push(stick);\n    }\n\n    this.saveChanges(newList)\n  };\n\n\n  deleteTodo = (i, j) => {\n    let newList = []\n\n    let id_stickies = i\n    let id_todos = j\n\n    for (let i in this.state.stickies){\n      let stick = this.state.stickies[i]\n\n      if (id_stickies == i){\n        let newTodos = []\n\n        for (let t in stick.todos){\n          if (t != id_todos){\n            newTodos.push(stick.todos[t])\n          }\n        }\n\n        stick.todos = newTodos\n      }\n\n      newList.push(stick);\n    }\n\n    this.saveChanges(newList)\n  };\n\n  toggleColourPicker = (i, j) => {\n    this.setState({colourPickerOpen: !this.state.colourPickerOpen, pickerState: [i, j]})\n  }\n\n  saveColourChange = (colour) => {\n    let newList = []\n\n    let id_stickies = this.state.pickerState[0]\n    let id_todos = this.state.pickerState[1]\n\n    for (let i in this.state.stickies){\n      let stick = this.state.stickies[i]\n      if (id_stickies == i){\n        stick.todos[id_todos].textColour = colour\n      }\n\n      newList.push(stick);\n    }\n\n    this.saveChanges(newList)\n  }\n\n  render(){\n    return (\n      <div id=\"screen\" className=\"h-screen p-3\">\n         <div className=\"flex flex-wrap gap-4 justify-center items-center mx-auto h-full w-full p-3\">\n           {this.buildStickies()}\n           <ColourPicker isOpen={this.state.colourPickerOpen} toggleOpen={this.toggleColourPicker} save={this.saveColourChange} />        \n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}